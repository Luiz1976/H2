import { GoogleGenerativeAI } from '@google/generative-ai';

// Inicializar Google Gemini AI
const genAI = new GoogleGenerativeAI(process.env.GOOGLE_API_KEY || '');

interface TestResult {
  testeNome: string;
  testeCategoria: string;
  pontuacaoTotal: number;
  metadados: any;
}

interface AnalysisData {
  indiceGeralBemEstar: number;
  totalColaboradores: number;
  totalTestesRealizados: number;
  testesUltimos30Dias: number;
  cobertura: number;
  dimensoes: Array<{
    nome: string;
    percentual: number;
    nivel: string;
  }>;
  nr1Fatores: Array<{
    fator: string;
    nivel: string;
    percentual: number;
  }>;
  alertasCriticos: string[];
}

export async function generatePsychosocialAnalysis(data: AnalysisData): Promise<{
  recomendacoes: Array<{
    categoria: string;
    prioridade: string;
    titulo: string;
    descricao: string;
  }>;
  insights: string;
}> {
  try {
    console.log('üß† [IA] Iniciando an√°lise psicossocial com Google Gemini...');
    
    // Se n√£o h√° dados suficientes, retornar recomenda√ß√µes padr√£o
    if (data.totalTestesRealizados === 0) {
      return {
        recomendacoes: [{
          categoria: 'Dados Insuficientes',
          prioridade: 'M√©dia',
          titulo: 'Coletar Mais Dados',
          descricao: 'N√£o h√° testes realizados ainda. Incentive os colaboradores a participarem das avalia√ß√µes psicossociais.'
        }],
        insights: 'Aguardando dados para an√°lise detalhada.'
      };
    }

    const model = genAI.getGenerativeModel({ model: 'gemini-1.5-flash' });

    // Criar prompt detalhado com os dados reais
    const prompt = `
Voc√™ √© um especialista em Psicologia Organizacional e Sa√∫de Ocupacional, certificado em NR1 (Norma Regulamentadora 1) e ISO 45003.

Analise os seguintes dados psicossociais REAIS de uma empresa:

√çNDICES GERAIS:
- √çndice de Bem-Estar Geral: ${data.indiceGeralBemEstar}%
- Total de Colaboradores: ${data.totalColaboradores}
- Testes Realizados: ${data.totalTestesRealizados}
- Testes nos √∫ltimos 30 dias: ${data.testesUltimos30Dias}
- Cobertura: ${data.cobertura}%

DIMENS√ïES PSICOSSOCIAIS:
${data.dimensoes.map(d => `- ${d.nome}: ${d.percentual}% (${d.nivel})`).join('\n')}

FATORES DE RISCO NR1:
${data.nr1Fatores.map(f => `- ${f.fator}: ${f.percentual}% (${f.nivel})`).join('\n')}

ALERTAS CR√çTICOS:
${data.alertasCriticos.length > 0 ? data.alertasCriticos.join('\n') : 'Nenhum alerta cr√≠tico identificado'}

TAREFA:
Gere exatamente 3-5 recomenda√ß√µes ESPEC√çFICAS e ACION√ÅVEIS baseadas nesses dados reais.
Retorne APENAS um JSON v√°lido no seguinte formato (sem markdown, sem \`\`\`):

{
  "recomendacoes": [
    {
      "categoria": "Categoria espec√≠fica (ex: Urgente, NR1 Compliance, Preven√ß√£o, Capacita√ß√£o)",
      "prioridade": "Alta ou M√©dia",
      "titulo": "T√≠tulo curto e impactante (m√°ximo 60 caracteres)",
      "descricao": "Descri√ß√£o espec√≠fica baseada nos dados reais, acion√°vel e pr√°tica (m√°ximo 200 caracteres)"
    }
  ],
  "insights": "Um par√°grafo resumindo os principais insights desta an√°lise"
}

REGRAS:
1. Seja ESPEC√çFICO com os n√∫meros reais fornecidos
2. Priorize "Alta" APENAS se: √≠ndice < 50, fatores cr√≠ticos, ou alertas graves
3. Use linguagem emp√°tica mas profissional
4. Foque em a√ß√µes pr√°ticas e mensur√°veis
5. Cite ISO 45003, NR1, ou Karasek-Siegrist quando apropriado
6. N√ÉO invente dados - use APENAS os fornecidos
7. Retorne APENAS JSON puro, sem formata√ß√£o markdown
`;

    const result = await model.generateContent(prompt);
    const response = result.response;
    const text = response.text();
    
    console.log('‚úÖ [IA] Resposta recebida do Google Gemini');
    console.log('üìÑ [IA] Texto bruto:', text.substring(0, 200) + '...');

    // Limpar resposta (remover markdown se houver)
    let cleanText = text.trim();
    if (cleanText.startsWith('```json')) {
      cleanText = cleanText.replace(/```json\n?/g, '').replace(/```\n?/g, '');
    } else if (cleanText.startsWith('```')) {
      cleanText = cleanText.replace(/```\n?/g, '');
    }

    const analysis = JSON.parse(cleanText);
    
    console.log('‚úÖ [IA] An√°lise processada com sucesso');
    console.log(`üìä [IA] Recomenda√ß√µes geradas: ${analysis.recomendacoes?.length || 0}`);

    return analysis;

  } catch (error) {
    console.error('‚ùå [IA] Erro ao gerar an√°lise:', error);
    
    // Fallback: Recomenda√ß√µes baseadas em regras se IA falhar
    const recomendacoes: Array<{
      categoria: string;
      prioridade: string;
      titulo: string;
      descricao: string;
    }> = [];
    
    if (data.indiceGeralBemEstar < 50) {
      recomendacoes.push({
        categoria: 'Urgente',
        prioridade: 'Alta',
        titulo: 'Interven√ß√£o Imediata Necess√°ria',
        descricao: `√çndice de bem-estar em ${data.indiceGeralBemEstar}%. A√ß√£o imediata com programas de apoio psicol√≥gico e revis√£o das condi√ß√µes de trabalho.`
      });
    }

    if (data.nr1Fatores.some(f => f.nivel === 'Cr√≠tico')) {
      recomendacoes.push({
        categoria: 'NR1 Compliance',
        prioridade: 'Alta',
        titulo: 'Fatores de Risco Cr√≠ticos Identificados',
        descricao: 'Fatores de risco psicossociais cr√≠ticos detectados. Implemente medidas preventivas imediatas conforme NR1.'
      });
    }

    if (data.cobertura < 80) {
      recomendacoes.push({
        categoria: 'Cobertura',
        prioridade: 'M√©dia',
        titulo: 'Aumentar Participa√ß√£o nos Testes',
        descricao: `Apenas ${data.cobertura}% dos colaboradores participaram. Aumente a cobertura para diagn√≥stico completo.`
      });
    }

    recomendacoes.push({
      categoria: 'Preven√ß√£o',
      prioridade: 'M√©dia',
      titulo: 'Programas de Bem-Estar',
      descricao: 'Implemente programas regulares de mindfulness, atividades f√≠sicas e gest√£o de estresse (ISO 45003).'
    });

    return {
      recomendacoes,
      insights: 'An√°lise gerada por sistema baseado em regras devido a indisponibilidade tempor√°ria da IA.'
    };
  }
}
